Package: jamie
Math Mode: mathjax
Colorizer: javascript
pre,code {
  language: fortran;
}
.token.operator { color: green }
.token.operator.extra { color: red }

# Viscous Stress
## Introduction
Viscous stress is a meaure of how a fluids internal frictional forces affect the flow of momentum through the fluid. The way in which the viscous stress depends on the rate of strain, that is the rate at which some deformation occurs, and the way in which this stress depends on other variables like temperature and magnetic field, is entirely goverened by the specific fluid in question. Some fluids, water being a good example, behave in a *Newtonian* fashion, where the viscous stress is linearly proportional to the rate of strain. Other fluids, such as ketchup, are examples of *shear-thinning* fluids, where the higher the rate of strain, that is the faster a deformation occurs, the less viscous the fluid behaves. There are of course many other non-Newtonian materials each with interesting properties arising from the nature of the viscous stress.

## The Viscous Stress Tensor
The viscous stress tensor $\sigma$ is introduced into momentum balance as,
~ Math
\rho\left( \frac{Dv}{Dt} \right)_i
= \frac{\partial \sigma_{ij}}{\partial x_j},
~
and into the energy balance as,
~Math
\rho\frac{D\varepsilon}{Dt} = \varepsilon_{ij}\sigma_{ij},
~
where we have made use of the Einstein summation convention that repeated indices in a term indicate summation,
~Math
x_{i}y_{i} \equiv \sum_{i=1}^{3} x_{i}y_{i}.
~

## Newtonian Fluids
For Newtonian fluids, viscous stress $\propto$ rate of strain, so for a compressible fluid, the viscous stress tensor is given by
~Math
\sigma_{ij} = 2\nu(E_{ij} - \frac{1}{3}\delta_{ij} \nabla \cdot \vec{v}),
~
where $\sigma_{ij}$ is the $i, j$-th component of the viscous stress tensor, $\nu$ is the dynamic viscosity, $E_{ij}$ is the $i, j$-th component of the deformation tensor, $\delta_{ij}$ is the Kronecker delta, and $\vec{v}$ is the fluid velocity.

The deformation tensor is given by
~Math
E = \frac{1}{2}\left( \frac{\partial v_i}{\partial x_{j}} + \frac{\partial v_j}{\partial x_i} \right)
~

To calculate the divergence, we investigate a single component of the viscous contribution to the momentum balance,
~Equation {#div_viscous_stress}
\frac{\partial\sigma_{ij}}{\partial x_j} = 2\nu\frac{\partial}{\partial x_j}\left(E_{ij} - \frac{1}{3}\delta_{ij}\nabla\cdot\vec{v}\right).
~
Differentiating each term separately, it can be shown that
~Math
\frac{\partial E_{ij}}{\partial x_j} = \frac{1}{2}\left(\nabla^{2}v_i + \frac{\partial}{\partial x_i}(\nabla \cdot \vec{v})\right),
~
and
~Math
\frac{\partial }{\partial x_j}\delta_{ij}\nabla \cdot \vec{v} = \frac{\partial}{\partial x_i}(\nabla \cdot \vec{v}).
~

Subbing these back into equation [#div_viscous_stress],
~Math
\frac{\partial\sigma_{ij}}{\partial x_j} = \nu\left(\frac{1}{3}\frac{\partial}{\partial x_i}(\nabla \cdot \vec{v}) + \nabla^2 v_i \right),
~
that is,
~Math
\nabla \cdot \sigma = \frac{\nu}{3}\nabla(\nabla \cdot \vec{v}) + \nu\nabla^2 \vec{v}.
~

Physically, these two terms represent different ways in which the internal frictional forces can manifest themselves. The first term involving $\nabla(\nabla \cdot \vec{v})$ is a resistance to compression or expansion. In the incompressible limit, where $\nabla\cdot\vec{v} \rightarrow 0$ this term would disappear as expected. The second term involving $\nabla^2 \vec{v}$ looks very much like a diffusion term and in fact can represent the diffusion of momentum through the fluid through neighbouring layers of fluid.

## Lare3D implementation

In order to try and elucidate what the Lare3D code is doing in order to implement Newtonian viscosity I shall split the code up and explain the sections. All of this code occurs inside a nested for loop that runs over the indices representing the $x$, $y$ and $z$ directions, as below. It also sets some useful variables for the previous and next indices.
```
DO iz = 0, nz + 1
  izm = iz - 1
  izp = iz + 1
  DO iy = 0, ny + 1
    iym = iy - 1
    iyp = iy + 1
    DO ix = 0, nx + 1
      ixm = ix - 1
      ixp = ix + 1
```

The following code then finds the velocity in the $x$ direction, $dvxdx$, at the centre of a cell by extrapolating values at the boundaries.
```
vxb  = (vx(ix ,iy ,iz ) + vx(ix ,iym,iz ) &
    +   vx(ix ,iy ,izm) + vx(ix ,iym,izm)) * 0.25_num

vxbm = (vx(ixm,iy ,iz ) + vx(ixm,iym,iz ) &
    +   vx(ixm,iy ,izm) + vx(ixm,iym,izm)) * 0.25_num

dvxdx = (vxb - vxbm) / dxb(ix)
```
Similar code is used to find the other derivatives of $v_x$, $v_y$ and $v_z$ with respect to $x$, $y$ and $z$.

The values for the strain rate tensor, respresented as `sxy` for the $x$, $y$ component, are given by the following code. Note that there are only six components due to the symmetric nature of the tensor.
```
sxy = dvxy * 0.5_num
sxz = dvxz * 0.5_num
syz = dvyz * 0.5_num
sxx = (2.0_num * dvxdx - dvydy - dvzdz) * third
syy = (2.0_num * dvydy - dvxdx - dvzdz) * third
szz = (2.0_num * dvzdz - dvxdx - dvydy) * third
```

In the version of the code being used, the shock viscosity tensor is calculated at this point, then the strain rate tensor is incorporated in a Newtonian way, as can be seen in the following code for the $xx$ component of $\sigma$.
```
qxx(ix,iy,iz) = qxx(ix,iy,iz) + 2.0_num * sxx * rho(ix,iy,iz) * visc3
```
Similar values for the $5$ other components of `q` are calculated. Note the multiplication by `rho` here to account for the compressiblity. In the event of an incompressible fluid being simulated, this will cancel in the momentum equation. 
